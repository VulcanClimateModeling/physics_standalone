This Readme-file contains information on the use of the files realted to the GT4Py implementation of the sea ice parameterization.
For information on the use of other files please have a look at the main Readme file.
                  
main.py
runs and validates the sea ice parameterization in plain python
sea_ice.py
sea ice parameterization in plain python
sea_ice_timer.py
sea ice parameterization in plain python with a timer to measure performance

main_gt4py.py
runs and validates the sea ice parameterization in plain python

sea_ice_gt4py.py
GT4Py implementation of the sea ice parameterization. This file contains one single stencil

sea_ice_gt4py_3sten.py
GT4Py implementation of the sea ice parameterization.
This file contains three individual stencils because a workaround for the backend gtcuda had to be applied such that it compiled

main_performance.py
Runs performance tests with plain python and different GT4Py backends and plots the results.

sea_ice_getpoints.py
writes land/sea point and sea-ice point to file
Attention, this is a dirty file. The file has to be adapted, such that both points are saved.
The file raises and errer, when the first point is saved to file

obj
this repository contains a land/sea point and a sea-ice point, which were used to initialize the arrays for the performance tests

ice.dat
land.dat

        
plot_fortran.py
boxplot_fortran.py
boxplot_python.py

m_countdown.F

main_performance_cpu_time.F
runs performance test of the fortran implementation of the sea ice parameterisation using the cpu_time command

main_performance_system_clock.F
runs performance test of the fortran implementation of the sea ice parameterisation using the syste_clock command


results_non_optimized.dat
results_optimized.dat
